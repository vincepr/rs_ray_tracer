###
### Project that implements wasm-bindings and a crude web-page to run the renderer in the browser
###

[package]
name = "wasm_web"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib"]

[features]
# If you uncomment this line, it will enable `wee_alloc`:
#default = ["wee_alloc", "console_error_panic_hook"]
default = []

[dependencies]
# The `wasm-bindgen` crate provides the bare minimum functionality needed
# to interact with JavaScript.
wasm-bindgen = "0.2.45"

mathlib_renderer = { path = "../mathlib_renderer"}

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so it's only enabled
# in debug mode.
console_error_panic_hook = { version = "0.1.5", optional = true }

# much smaller build sizes and faster memory-allocations possible with wee_alloc
wee_alloc = { version = "0.4", optional = true }

# The `web-sys` crate allows you to interact with the various browser APIs,
# like the DOM.
[dependencies.web-sys]
version = "0.3.22"
features = [
    "console",
    "ImageData",
    "CanvasRenderingContext2d",
]